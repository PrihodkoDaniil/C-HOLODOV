1. Назовите основные типы, необходимые для работы с GDI+.
System.Drawing/Drawing2d/Drawing.Imaging/Drawing.Printing/Drawing.Text

2. Какие пространства имен доступны для работы с графикой?
System.Drawing/Drawing2d/Drawing.Imaging

3. Опишите возможные конструкторы класса Point.
new Point Point[]
перегруженные операции: +,-==,!=
доступ к значениям (x,y)
Использование для построения закрытых и открытых фигур, либо координаты для цельной фигуры

4. В чем состоит особенность конструктора класса Region?
представляет внутреннюю часть геометрической фигуры, 
поэтому конструкторы класса Region требуют, чтобы им на вход был предоставлен некоторый геометрический объект

5. Как получить доступ к объекту класса Graphics?
 WM_PAINT

6. Опишите способ, с помощью которого можно реализовать перехват соытия 
мыши над фигурами GDI+.
7. Для чего предназначе класс GraphicPath?
представляющий последовательность соединенных линий и кривых.

8. Чем отличаются типы Point и PointF?
Point - int ; PointF-float

9. Какие элементы могут обрабатывать событие Paint?
Практически все куда можно записать различные типы данных

10. Для чего используется тип PathPointType?
для точек данных в пути

11. Через какой тип происходит рисование в обработчике события Paint?
System.Graphics

12. Опишите механизм выбора объекта GDI.
Выбрать pen or brush потом создать Point, а после создать объект

13. Какие события участвуют в процессе интрактивного взаимодействия с GDI объектами графики?
Создания и размещения

14. Какое событие необходимо задействовать, если добавить в программу отображение контура объекта при перетаскивании?
MouseMove

15. Опишите механизм реализации анимации с использованием GDI+.
Создать два значение вне вызовов и по таймеру увеличивать их прибаляя к координатам фигуры

16. Опишите назначение основных свойств и методов класса Timer.
Tick - обновляет значение по истечении интревала;
Start and Stop;

17. Для чего предназначено событие Tick класса Timer?
Происходит по истечении заданного интервала таймера при условии, что таймер включен.

18. Сколько таймеров может присутствовать в программе?
 10000 объектов на процесс
----------------------------------------------------------------------------------------------------------
1. Опишите основные свойства класса Window.
Icon: представляет иконку
Top:отступ верхней границы экрана
Left:отступ от левой границы экрана
ResizeMode: задает режим изменения размеров окна.
Title: заголовок окна.

2. Что такое контейнер компоновки? Для чего они используются? Опишите свойства класса Panel.
являются панелями, которые унаследованы от абстрактного класса System.Windows.Controls.Panel
<<разделяют>>доступное пространство между своими дочерними элементами. 
BackColor BorderStyle Font ForeColor FontHeight

3. Назовите основные контейнеры компоновки. Дайте характеристику и опишите особенности контейнеров компоновки.
StackPanel горизонтально/вертикально,WrapPanel полседовательности строк с переносом, DockPanel по краю,
Grid строки и колонки таблицы,UniformGrid тоже самое но ячейки одинаково размера,
Canvas абсолют по фикс. координатам 

4. Что такое присоединенное свойство? Приведите примеры.
 специализированная форма свойства зависимостей, у которых нет обычного свойства "оболочка"
<Button Content="кнопка 1" DockPanel.Dock="Top"/>

5. Какой контейнер применяется в окне приложения как контейнер компоновки по умолчанию?
Grid

6. Какие свойства элементов управления влияют на положение элементов внутри контейнера компоновки?
Location Size
-----------------------------------------------------------------------------------------------------------

1. Что такое стиль?
называется коллекция значений свойств, которые могут применяться к элементу

2. Что такое ресурс?
набор объектов, таких как Кисти, шаблоны, стили и т.д. которые хранятся в словаре и на которые 
ссылаются уникальные строки

3. Что такое триггер?
задает значения свойств или активирует различные действия (например, анимацию) 
при изменении значения свойства или при возникновении какого-либо события.

4. Опишите механизмы применения стилей.
Создать стиль и задать ему параметры.

5. Опишите механизмы применения триггеров.
Примерно то же что и стиль,но должно указываться событие 

6. Какие типы ресурсов вы знаете?
объектные ресурсы (object resource) – определенный .NET 

7. У каких элементов WPF может быть коллекция ресурсов?
Каждый элемент включает свойство Resources, в котором хранится словарная 
коллекция ресурсов 
===========================================================================================================
1. Что такое привязка WPF?
это простой и последовательный способ представления данных и взаимодействия с ними для приложений. 
Элементы можно связывать с данными из различных источников в виде объектов .NET и XML

2. Поясните синтаксис привязки. Какие ключевые слова и для каких целей используются при оформлении привязки с помощью XAML?
Binding ElemntName -по какому элементу Path-какое значение
 
3. Какие режимы привязки существуют? Поясните назначение всех режимов привязки.
OneWay ->;TwoWay<->;Onetime-no change;OWToSource<-;Deafult;

4. Поясните схему привязки элементов управления. Назовите основные элементы данной схемы.
Binding ElemntName -по какому элементу Path-какое значение Mode

5. Что означают понятия «целевой элемент», «элемент-источник привязки», «целевое свойство», «свойство-источник»?
Источник - элемент от котрого идет значение
Целевой - элемент к которому идет значение
Цел св-во - значение что меняется
св-во источник - свойсто что отвечает за значение

6. Какое ограничение на источник привязки существует в WPF
-Свойства, используемые в качестве свойств источника привязки, должны быть открытыми свойствами класса.
-привязка к открытым полям
-WPF не генерирует исключения для уведомления о проблемах привязки данных

============================================================================================================
1. Чем отличается привязка к элементам управления от привязки к произвольным объектам?
данные для привязки должны находиться в общедоступных свойствах

2. Поясните синтаксис привязки к данным. Какие ключевые слова и для каких целей используются при оформлении привязки с помощью XAML?
Souce/RelativeSource/DataContex={Binding/Binding Path Mode}

3. Какие режимы привязки существуют? Поясните назначение всех режимов привязки.
Souce -ссылка на исходный объект
RelativeSource - тоже но основываясь на отношениях между исходником и целевым
DataContex- если не указаны две выше

4. Поясните схему привязки элементов управления. Назовите основные элементы данной схемы.
ссылка на исходный объект и целевой элемент

5. Что означают понятия «целевой элемент», «элемент-источник привязки», «целевое свойство», «свойство-источник»?
Источник - элемент от котрого идет значение
Целевой - элемент к которому идет значение
Цел св-во - значение что меняется
св-во источник - свойсто что отвечает за значение
6. Какое ограничение на источник привязки существует в WPF?
-Свойства, используемые в качестве свойств источника привязки, должны быть открытыми свойствами класса.
-привязка к открытым полям
-WPF не генерирует исключения для уведомления о проблемах привязки данных
7. Какое ограничение существует на целевое свойство привязки?
Целевое свойство должно быть свойством зависимости
